%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% BME70B: Biomedical Engineering Capstone Design
% AT03 Robotic Automated Microscopy Calibration and Tracking
% Phase I Demonstration
%
% Author #1: Ginette Hartell - 500755250
% Author #2: Mohammad Aziz Uddin - 500754765
% Author #3: Jay Tailor - 500750496
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Initialization
addpath(genpath('Trial 18-19'));
load("stereoParams18.mat")

readerLeft= VideoReader('myVideoLeftPivot7.avi');
readerRight = VideoReader('myVideoRightPivot7.avi');

player = vision.DeployableVideoPlayer('Location',[10,100]);
v = VideoWriter('pivot.avi');
v.FrameRate = 30;
open(v)

hblob = vision.BlobAnalysis('AreaOutputPort', false, ... % Set blob analysis handling
                                'CentroidOutputPort', true, ... 
                                'BoundingBoxOutputPort', true', ...
                                'MinimumBlobArea', 1, ...
                                'MaximumBlobArea', 20000, ...
                                'MaximumCount',3);

[Robot,q0] = initializeMicroscope();
%test

%% Marker tracking and robot movement

point3d_coord_1(235,3) = 0;
point3d_coord_2(235,3) = 0;
point3d_coord_3(235,3) = 0;
count = 1;

tic;
while hasFrame(readerLeft) && hasFrame(readerRight)

%Left Frame
frameLeft = readFrame(readerLeft);
frameLeftGray = rgb2gray(frameLeft);

%Right Frame
frameRight = readFrame(readerRight);
frameRightGray = rgb2gray(frameRight);

%Threshold for Grayscale 
threshold = 240;

%Detect l 
img_left = frameLeftGray > threshold;%figure;imshow(img_cut)
BW_left = bwareafilt(img_left, 3); % Extract largest blob.
[centroidLeft,bboxLeft] = step(hblob,BW_left);

%right
img_right = frameRightGray > threshold;%figure;imshow(img_cut)
BW_right = bwareafilt(img_right, 3); % Extract largest blob.
[centroidRight,bboxRight] = step(hblob,BW_right);

%Triangulate for all three markers

point3d_1 = triangulate(centroidRight(1,:),centroidLeft(1,:),stereoParams18);
point3d_2 = triangulate(centroidRight(2,:),centroidLeft(2,:),stereoParams18);
point3d_3 = triangulate(centroidRight(3,:),centroidLeft(3,:),stereoParams18);

%Store marker coordinates into frame
point3d_coord_1(count,1) = point3d_1(1,1);
point3d_coord_1(count,2) = point3d_1(1,2);
point3d_coord_1(count,3) = point3d_1(1,3);

point3d_coord_2(count,1) = point3d_2(1,1);
point3d_coord_2(count,2) = point3d_2(1,2);
point3d_coord_2(count,3) = point3d_2(1,3);

point3d_coord_3(count,1) = point3d_3(1,1);
point3d_coord_3(count,2) = point3d_3(1,2);
point3d_coord_3(count,3) = point3d_3(1,3);


rgb = insertShape(frameLeft,'rectangle',bboxLeft(1,:),'Color','black',...
'LineWidth',3);
%GREEN
rgb = insertShape(rgb,'rectangle',bboxLeft(2,:),'Color','black',...
'LineWidth',3);
%BLUE
rgb = insertShape(rgb,'rectangle',bboxLeft(3,:),'Color','black',...
'LineWidth',3);

rgb = insertText(rgb,centroidLeft(1,:) - 20,['X: ' num2str(round(point3d_1(1,1)),'%d')...
' Y: ' num2str(round(point3d_1(1,2)),'%d') ' Z: ' num2str(round(point3d_1(1,3)))],'FontSize',18);

rgb = insertText(rgb,centroidLeft(2,:) + 50,['X: ' num2str(round(point3d_2(1,1)),'%d')...
' Y: ' num2str(round(point3d_2(1,2)),'%d') ' Z: ' num2str(round(point3d_2(1,3)))],'FontSize',18);

rgb = insertText(rgb,centroidLeft(3,:) - 50,['X: ' num2str(round(point3d_3(1,1)),'%d')...
' Y: ' num2str(round(point3d_3(1,2)),'%d') ' Z: ' num2str(round(point3d_3(1,3)))],'FontSize',18);

player(rgb);
writeVideo(v,rgb);    

count = count + 1;  
    
end

release(player)
close(v);  

[x_tip_1,y_tip_1,z_tip_1] = pivotCalibrate(point3d_coord_1);
[x_tip_2,y_tip_2,z_tip_2] = pivotCalibrate(point3d_coord_2);
[x_tip_3,y_tip_3,z_tip_3] = pivotCalibrate(point3d_coord_3);

x_tip = mean(x_tip_1, x_tip_2, x_tip_3);
y_tip = mean(y_tip_1, y_tip_2, y_tip_3);
z_tip = mean(z_tip_1, z_tip_2, z_tip_3);

% World to Microscope Coordinate Mapping (for blue coordinates)
[xMicroscope, yMicroscope, zMicroscope] = world2Microscope(point3dBLUE(1), point3dBLUE(2), point3dBLUE(3));


% Send to Control System
q0 = moveMicroscope(xMicroscope, yMicroscope, zMicroscope, q0, Robot);

toc;

% release(player)
% close(v);

